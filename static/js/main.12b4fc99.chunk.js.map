{"version":3,"sources":["components/images.js","images/cool.png","images/frustrated.png","images/frustrated(2).png","images/laughing.png","images/nerd.png","images/relaxed.png","images/sad.png","images/shocked.png","images/silence.png","images/swearing.png","components/Card.js","components/Header.js","components/Footer.js","components/App.js","index.js"],"names":["images","Card","props","cardClicked","isGameOver","useState","clickCount","setClickCount","useEffect","className","onClick","prev","alt","src","style","height","width","maxHeight","Header","highScore","currentScore","Footer","App","setGameOver","currentscore","setCurrentScore","setHighScore","console","log","cardArr","checkCard","useCallback","timesClicked","previousScore","cardElements","map","index","sort","Math","random","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAceA,EAFA,CCZA,IAA0B,iCCA1B,IAA0B,uCCA1B,IAA0B,0CCA1B,IAA0B,qCCA1B,IAA0B,iCCA1B,IAA0B,oCCA1B,IAA0B,gCCA1B,IAA0B,oCCA1B,IAA0B,oCCA1B,IAA0B,sC,eCuC1BC,EApCF,SAACC,GACZ,IAAQC,EAA4BD,EAA5BC,YAAaC,EAAeF,EAAfE,WAErB,EAAoCC,mBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAEAC,qBAAU,WACRL,EAAYG,KACX,CAACA,EAAYH,IAEhBK,qBAAU,WACJJ,GACFG,GAAc,WACZ,OAAO,OAGV,CAACH,IAQJ,OACE,qBAAKK,UAAU,OAAOC,QAPN,WAChBH,GAAc,SAACI,GACb,OAAOA,EAAO,MAKhB,SACE,qBAAKF,UAAU,UAAf,SACE,qBACEG,IAAK,QACLC,IAAKX,EAAMW,IACXC,MAAO,CAAEC,OAAQ,OAAQC,MAAO,OAAQC,UAAW,WCd9CC,G,MAhBA,SAAChB,GACd,OACE,sBAAKO,UAAU,SAAf,UACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,aAAf,UACE,6CAAgBP,EAAMiB,aACtB,gDAAmBjB,EAAMkB,qBAG7B,qBAAKX,UAAU,YAAf,SACE,+CCHOY,G,MARA,WACb,OACE,qBAAKZ,UAAU,SAAf,SACE,kECyDSa,EArDH,WACV,MAAkCjB,oBAAS,GAA3C,mBAAOD,EAAP,KAAmBmB,EAAnB,KACA,EAAwClB,mBAAS,GAAjD,mBAAOmB,EAAP,KAAqBC,EAArB,KACA,EAAkCpB,mBAAS,GAA3C,mBAAOc,EAAP,KAAkBO,EAAlB,KAEAlB,qBAAU,YACW,IAAfJ,IACEoB,EAAeL,IACjBO,EAAaF,GACbG,QAAQC,IAAI,eAEdH,GAAgB,kBAAM,KACtBF,GAAY,kBAAM,QAEnB,CAACnB,EAAYoB,EAAcL,IAE9B,IAasBU,EAbhBC,EAAYC,uBAAY,SAACC,GACzBA,EAAe,GACjBT,GAAY,WACV,OAAO,KAGU,IAAjBS,GACFP,GAAgB,SAACQ,GACf,OAAOA,EAAgB,OAG1B,IAMGC,EAAelC,EAAOmC,KAAI,SAACtB,EAAKuB,GACpC,OACE,cAAC,EAAD,CAEEjC,YAAa2B,EACb1B,WAAYA,EACZS,IAAKA,GAHAuB,MAQX,OACE,sBAAK3B,UAAU,WAAf,UACE,cAAC,EAAD,CAAQW,aAAcI,EAAcL,UAAWA,KAjB7BU,EAkBJK,EAjBTL,EAAQQ,MAAK,kBAAMC,KAAKC,SAAW,OAkBxC,cAAC,EAAD,QCnDNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.12b4fc99.chunk.js","sourcesContent":["import img1 from \"../images/cool.png\";\nimport img2 from \"../images/frustrated.png\";\n\nimport img4 from \"../images/frustrated(2).png\";\nimport img5 from \"../images/laughing.png\";\nimport img6 from \"../images/nerd.png\";\nimport img7 from \"../images/relaxed.png\";\nimport img8 from \"../images/sad.png\";\nimport img9 from \"../images/shocked.png\";\nimport img10 from \"../images/silence.png\";\nimport img11 from \"../images/swearing.png\";\n\nconst images = [img1, img2, img4, img5, img6, img7, img8, img9, img10, img11];\n\nexport default images;\n","export default __webpack_public_path__ + \"static/media/cool.b5039269.png\";","export default __webpack_public_path__ + \"static/media/frustrated.a4e1bc48.png\";","export default __webpack_public_path__ + \"static/media/frustrated(2).6c88a019.png\";","export default __webpack_public_path__ + \"static/media/laughing.bde8253a.png\";","export default __webpack_public_path__ + \"static/media/nerd.aab599e3.png\";","export default __webpack_public_path__ + \"static/media/relaxed.323ff0a0.png\";","export default __webpack_public_path__ + \"static/media/sad.d9b7c3d7.png\";","export default __webpack_public_path__ + \"static/media/shocked.add9606f.png\";","export default __webpack_public_path__ + \"static/media/silence.bea20397.png\";","export default __webpack_public_path__ + \"static/media/swearing.227dcbb1.png\";","import React, { useEffect, useState } from \"react\";\nimport \"../styles/card.css\";\n\nconst Card = (props) => {\n  const { cardClicked, isGameOver } = props;\n  //const [imgUrl, setImgUrl] = useState(props.imgUrl);\n  const [clickCount, setClickCount] = useState(0);\n\n  useEffect(() => {\n    cardClicked(clickCount);\n  }, [clickCount, cardClicked]);\n\n  useEffect(() => {\n    if (isGameOver) {\n      setClickCount(() => {\n        return 0;\n      });\n    }\n  }, [isGameOver]);\n\n  const clickCard = () => {\n    setClickCount((prev) => {\n      return prev + 1;\n    });\n  };\n\n  return (\n    <div className=\"card\" onClick={clickCard}>\n      <div className=\"imgWrap\">\n        <img\n          alt={\"emoji\"}\n          src={props.src}\n          style={{ height: \"auto\", width: \"auto\", maxHeight: 80 }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import \"../styles/header.css\";\n\nconst Header = (props) => {\n  return (\n    <div className=\"header\">\n      <div className=\"scoreWrap\">\n        <div className=\"scoreBoard\">\n          <p>High Score: {props.highScore}</p>\n          <p>Current Score: {props.currentScore}</p>\n        </div>\n      </div>\n      <div className=\"titleWrap\">\n        <h1>MEMOJI</h1>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import \"../styles/footer.css\";\nconst Footer = () => {\n  return (\n    <div className=\"footer\">\n      <p>Designed for the Odin Project</p>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport images from \"./images\";\nimport Card from \"./Card\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\n\n// icons from https://www.flaticon.com/packs/emoji-people-1\n\nconst App = () => {\n  const [isGameOver, setGameOver] = useState(false);\n  const [currentscore, setCurrentScore] = useState(0);\n  const [highScore, setHighScore] = useState(0);\n\n  useEffect(() => {\n    if (isGameOver === true) {\n      if (currentscore > highScore) {\n        setHighScore(currentscore);\n        console.log(\"game over!\");\n      }\n      setCurrentScore(() => 0);\n      setGameOver(() => false);\n    }\n  }, [isGameOver, currentscore, highScore]);\n\n  const checkCard = useCallback((timesClicked) => {\n    if (timesClicked > 1) {\n      setGameOver(() => {\n        return true;\n      });\n    }\n    if (timesClicked !== 0) {\n      setCurrentScore((previousScore) => {\n        return previousScore + 1;\n      });\n    }\n  }, []);\n\n  const shuffleCards = (cardArr) => {\n    return cardArr.sort(() => Math.random() - 0.5);\n  };\n\n  const cardElements = images.map((src, index) => {\n    return (\n      <Card\n        key={index}\n        cardClicked={checkCard}\n        isGameOver={isGameOver}\n        src={src}\n      />\n    );\n  });\n\n  return (\n    <div className=\"gameWrap\">\n      <Header currentScore={currentscore} highScore={highScore} />\n      {shuffleCards(cardElements)}\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}